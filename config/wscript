### PROJECT CONFIGURATION ###
APPNAME = 'cap2re'
VERSION = '0.1'
top = '.'
out = 'build'
#############################

def options(ctx):
    ctx.load('compiler_cxx')

def configure(ctx):
    ctx.load('compiler_cxx')
    ctx.env.PREFIX = '/usr'

    # look for libgphoto2
    ctx.check_cfg(
        package = 'libgphoto2',
        args = '--cflags --libs',
        uselib_store = 'GPHOTO2'
    )

    # check for boost::regex
    ctx.check_cxx(
        header_name = 'boost/regex.hpp',
        lib = 'boost_regex',
        uselib_store = 'BOOST_REGEX',
        msg = "Checking for 'Boost::RegEx'"
    )

    # checking for python2
    ctx.check_cfg(
        path='python2-config',
        package = '',
        args = '--include',
        uselib_store = 'PYTHON2',
        msg = "Checking for 'Python' headers",
    )

    # enable last C++ standard support
    ctx.env.CXXFLAGS = ['-std=c++0x']

    # build in debug mode
    ctx.env.CXXFLAGS += ['-ggdb', '-fPIC']

    ctx.write_config_header('../src/config.h', remove=False)

def build(ctx):
    # Build platform-independent code
    ctx.objects(
        source = 'src/Node.cpp src/ConfigOptsTree.cpp',
        target = 'ConfigOptsTree'
    )

    ctx.objects(
        source = 'src/Camera.cpp',
        target = 'Camera'
    )

    ctx.objects(
        source = 'src/CameraManager.cpp',
        target = 'CameraManager'
    )

    # Build backends
    backends = []
    libs = []

    if ctx.env.HAVE_GPHOTO2 == 1:
        backends.append('backend_gphoto2')
        libs.append('GPHOTO2')

        ctx.objects(
            source = 'src/Gphoto2Camera.cpp src/Gphoto2CameraManager.cpp',
            target = 'backend_gphoto2'
        )

    # Invoke SWIG and generate wrapping source file
    ctx(
        rule = "swig -c++ -python -I../src -o wrapper.cpp ${SRC}",
        source = 'config/swig_export.i',
        target = 'cap2re.py wrapper.cpp'
    )

    # Build python wrapper
    ctx.shlib(
        source = 'build/wrapper.cpp',
        target = 'cap2re',
        includes = ['INCLUDES_PYTHON2', './src'],
        uselib = ['PYTHON2', 'BOOST_REGEX'] + libs,
        use = ['Camera', 'CameraManager', 'ConfigOptsTree'] + backends
    )
